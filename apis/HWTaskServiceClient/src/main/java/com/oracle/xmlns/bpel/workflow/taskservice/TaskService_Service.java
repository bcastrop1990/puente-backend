package com.oracle.xmlns.bpel.workflow.taskservice;

/*
 * #%L
 * TUPA: Integration: BPM-Client: HW Task Service Client
 * %%
 * Copyright (C) 2016 SENASA
 * %%
 * This software is the confidential and proprietary information of SENASA. 
 * You shall not disclose such confidential information and shall use it only 
 * in accordance with the terms of the license agreement you entered into with 
 * SENASA.
 * #L%
 */

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
//import pe.gob.senasa.properties.util.PropertiesUtil;

/**
 * Task Service
 *
 * This class was generated by Apache CXF 3.1.8
 * 2016-11-03T10:59:40.322-05:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "TaskService", 
                  wsdlLocation = "file:/home/usuario/dev/crossnet/senasa_011_item2_desarrollo/integracion/bpm/hw-task-service-client/src/main/resources/wsdl/TaskServicePort_1.wsdl",
                  targetNamespace = "http://xmlns.oracle.com/bpel/workflow/taskService") 
public class TaskService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/bpel/workflow/taskService", "TaskService");
    public final static QName TaskServicePortSAML = new QName("http://xmlns.oracle.com/bpel/workflow/taskService", "TaskServicePortSAML");
    public final static QName TaskServicePort = new QName("http://xmlns.oracle.com/bpel/workflow/taskService", "TaskServicePort");
   
    private static final Logger LOGGER = Logger.getLogger(TaskService_Service.class.getName());

    static {
        URL url = null;
        try {
            //url = new URL(PropertiesUtil.getProperty("ws.taskService"));
            url = new URL("http://srvvldsoabpm.senasa.gob.pe:7011/integration/services/TaskService/TaskServicePort?wsdl");
        	//url = new URL("http://localhost:7105/integration/services/TaskService/TaskServicePort?wsdl");
        } catch (MalformedURLException e) {
            LOGGER.log(Level.SEVERE, "[CROSSNET] - MalformedURLException - TaskService_Service : {0}", e);
        } catch (Exception ex) {
            LOGGER.log(Level.SEVERE, "[CROSSNET] - Exception - TaskService_Service : {0}", ex);
        }
        WSDL_LOCATION = url;
    }

    public TaskService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TaskService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TaskService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public TaskService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TaskService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TaskService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     * SAML-token port, TaskServicePortSAML, is deprecated in 12.1.3
     *
     * @return
     *     returns TaskService
     */
    @WebEndpoint(name = "TaskServicePortSAML")
    public TaskService getTaskServicePortSAML() {
        return super.getPort(TaskServicePortSAML, TaskService.class);
    }

    /**
     * SAML-token port, TaskServicePortSAML, is deprecated in 12.1.3
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TaskService
     */
    @WebEndpoint(name = "TaskServicePortSAML")
    public TaskService getTaskServicePortSAML(WebServiceFeature... features) {
        return super.getPort(TaskServicePortSAML, TaskService.class, features);
    }


    /**
     *
     * @return
     *     returns TaskService
     */
    @WebEndpoint(name = "TaskServicePort")
    public TaskService getTaskServicePort() {
        return super.getPort(TaskServicePort, TaskService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TaskService
     */
    @WebEndpoint(name = "TaskServicePort")
    public TaskService getTaskServicePort(WebServiceFeature... features) {
        return super.getPort(TaskServicePort, TaskService.class, features);
    }

}
