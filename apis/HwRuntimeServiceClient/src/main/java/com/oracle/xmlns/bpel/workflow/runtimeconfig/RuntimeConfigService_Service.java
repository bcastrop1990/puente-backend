package com.oracle.xmlns.bpel.workflow.runtimeconfig;

/*
 * #%L
 * TUPA: Integration: BPM-Client: HW Runtime Service Client
 * %%
 * Copyright (C) 2016 SENASA
 * %%
 * This software is the confidential and proprietary information of SENASA. 
 * You shall not disclose such confidential information and shall use it only 
 * in accordance with the terms of the license agreement you entered into with 
 * SENASA.
 * #L%
 */
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * RuntimeConfig Service
 *
 * This class was generated by Apache CXF 3.1.8 2016-11-03T12:49:27.932-05:00
 * Generated source version: 3.1.8
 *
 */
@WebServiceClient(name = "RuntimeConfigService", targetNamespace = "http://xmlns.oracle.com/bpel/workflow/runtimeConfig")
public class RuntimeConfigService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/bpel/workflow/runtimeConfig", "RuntimeConfigService");
    public final static QName RuntimeConfigServicePortSAML = new QName("http://xmlns.oracle.com/bpel/workflow/runtimeConfig", "RuntimeConfigServicePortSAML");
    public final static QName RuntimeConfigServicePort = new QName("http://xmlns.oracle.com/bpel/workflow/runtimeConfig", "RuntimeConfigServicePort");
    private static final Logger LOGGER = Logger.getLogger(RuntimeConfigService_Service.class.getName());

    static {
        URL url = null;
        try {
            url = new URL("http://srvvldsoabpm.senasa.gob.pe:7011/integration/services/RuntimeConfigService/RuntimeConfigService?wsdl");
        	//url = new URL("http://localhost:7105/integration/services/RuntimeConfigService/RuntimeConfigService?wsdl");
        } catch (MalformedURLException e) {
            LOGGER.log(Level.SEVERE, "[CROSSNET] - MalformedURLException - RuntimeConfigService_Service : {0}", e.getMessage());
        } catch (Exception ex) {
            LOGGER.log(Level.SEVERE, "[CROSSNET1] - Exception - RuntimeConfigService_Service : {0}", ex.getMessage());
        }
        WSDL_LOCATION = url;
    }

    public RuntimeConfigService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RuntimeConfigService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RuntimeConfigService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public RuntimeConfigService_Service(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RuntimeConfigService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RuntimeConfigService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * SAML-token port, RuntimeConfigServiceSAML, is deprecated in 12.1.3
     *
     * @return returns RuntimeConfigService
     */
    @WebEndpoint(name = "RuntimeConfigServicePortSAML")
    public RuntimeConfigService getRuntimeConfigServicePortSAML() {
        return super.getPort(RuntimeConfigServicePortSAML, RuntimeConfigService.class);
    }

    /**
     * SAML-token port, RuntimeConfigServiceSAML, is deprecated in 12.1.3
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns RuntimeConfigService
     */
    @WebEndpoint(name = "RuntimeConfigServicePortSAML")
    public RuntimeConfigService getRuntimeConfigServicePortSAML(WebServiceFeature... features) {
        return super.getPort(RuntimeConfigServicePortSAML, RuntimeConfigService.class, features);
    }

    /**
     *
     * @return returns RuntimeConfigService
     */
    @WebEndpoint(name = "RuntimeConfigServicePort")
    public RuntimeConfigService getRuntimeConfigServicePort() {
        return super.getPort(RuntimeConfigServicePort, RuntimeConfigService.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns RuntimeConfigService
     */
    @WebEndpoint(name = "RuntimeConfigServicePort")
    public RuntimeConfigService getRuntimeConfigServicePort(WebServiceFeature... features) {
        return super.getPort(RuntimeConfigServicePort, RuntimeConfigService.class, features);
    }

}
