package com.oracle.xmlns.bpel.workflow.taskqueryservice;

/*
 * #%L
 * TUPA: Integration: BPM-Client: HW Task Query Service Client
 * %%
 * Copyright (C) 2016 SENASA
 * %%
 * This software is the confidential and proprietary information of SENASA. 
 * You shall not disclose such confidential information and shall use it only 
 * in accordance with the terms of the license agreement you entered into with 
 * SENASA.
 * #L%
 */
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8 2016-11-03T11:45:13.663-05:00
 * Generated source version: 3.1.8
 *
 */
@WebServiceClient(name = "TaskQueryService", targetNamespace = "http://xmlns.oracle.com/bpel/workflow/taskQueryService")
public class TaskQueryService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/bpel/workflow/taskQueryService", "TaskQueryService");
    public final static QName TaskQueryServicePort = new QName("http://xmlns.oracle.com/bpel/workflow/taskQueryService", "TaskQueryServicePort");
    public final static QName TaskQueryServicePortSAML = new QName("http://xmlns.oracle.com/bpel/workflow/taskQueryService", "TaskQueryServicePortSAML");
    private static final Logger LOGGER = Logger.getLogger(TaskQueryService_Service.class.getName());

    static {
        URL url = null;
        try {
            url = new URL("http://srvvldsoabpm.senasa.gob.pe:7011/integration/services/TaskQueryService/TaskQueryService?wsdl");
        	//url = new URL("http://localhost:7105/integration/services/TaskQueryService/TaskQueryService?wsdl");
        } catch (MalformedURLException e) {
            LOGGER.log(Level.SEVERE, "[CROSSNET] - MalformedURLException - TaskQueryService_Service : {0}", e);
        } catch (Exception ex) {
            LOGGER.log(Level.SEVERE, "[CROSSNET] - Exception - TaskQueryService_Service : {0}", ex);
        }
        WSDL_LOCATION = url;
    }

    public TaskQueryService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TaskQueryService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TaskQueryService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public TaskQueryService_Service(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TaskQueryService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TaskQueryService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns TaskQueryService
     */
    @WebEndpoint(name = "TaskQueryServicePort")
    public TaskQueryService getTaskQueryServicePort() {
        return super.getPort(TaskQueryServicePort, TaskQueryService.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns TaskQueryService
     */
    @WebEndpoint(name = "TaskQueryServicePort")
    public TaskQueryService getTaskQueryServicePort(WebServiceFeature... features) {
        return super.getPort(TaskQueryServicePort, TaskQueryService.class, features);
    }

    /**
     * SAML-token port, TaskQueryServiceSAML, is deprecated in 12.1.3
     *
     * @return returns TaskQueryService
     */
    @WebEndpoint(name = "TaskQueryServicePortSAML")
    public TaskQueryService getTaskQueryServicePortSAML() {
        return super.getPort(TaskQueryServicePortSAML, TaskQueryService.class);
    }

    /**
     * SAML-token port, TaskQueryServiceSAML, is deprecated in 12.1.3
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns TaskQueryService
     */
    @WebEndpoint(name = "TaskQueryServicePortSAML")
    public TaskQueryService getTaskQueryServicePortSAML(WebServiceFeature... features) {
        return super.getPort(TaskQueryServicePortSAML, TaskQueryService.class, features);
    }

}
